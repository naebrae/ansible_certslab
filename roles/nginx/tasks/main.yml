--- 
- copy: src=nginx.repo dest=/etc/yum.repos.d/nginx.repo owner=root group=root mode=0600
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 5 and ansible_distribution_major_version|int <= 7

- yum: 
    name: 
    - nginx
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 5

- command: amazon-linux-extras install -y nginx1
  when: ansible_distribution == "Amazon"
 
- copy: src=nginx.conf.el8 dest=/etc/nginx/nginx.conf owner=root group=root mode=0644
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 8

- copy: src=nginx.conf.amzn2 dest=/etc/nginx/nginx.conf owner=root group=root mode=0644
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 2

- shell: creates=/etc/pki/tls/certs/localhost.csr openssl req -newkey rsa:2048 -nodes
   -keyout /etc/pki/tls/private/localhost.key 
   -out /etc/pki/tls/certs/localhost.csr 
   -subj "/CN=localhost"
- shell: openssl x509 -req -days 365 -sha256
   -in /etc/pki/tls/certs/localhost.csr
   -out /etc/pki/tls/certs/localhost.crt
   -CA /etc/pki/tls/certs/localsrvca.crt 
   -CAkey /etc/pki/tls/private/localsrvca.key 
   -CAcreateserial
   -extensions EXTS
   -extfile <(cat
   <(printf "[EXTS]\n")
   <(printf "authorityKeyIdentifier=keyid:always,issuer\n")
   <(printf "subjectKeyIdentifier=hash\n")
   <(printf "subjectAltName=DNS:localhost,IP:127.0.0.1\n")
   <(printf "keyUsage=critical,digitalSignature,keyEncipherment\n")
   <(printf "extendedKeyUsage=serverAuth,clientAuth\n")
   <(printf "crlDistributionPoints=URI:http://ca.lab.local/localsrvca.crl\n")
   <(printf "certificatePolicies=@polsect\n")
   <(printf "authorityInfoAccess=OCSP;URI:http://ocsp.lab.local,caIssuers;URI:http://ca.lab.local/localsrvca.crt\n")
   <(printf "basicConstraints=critical,CA:false\n")
   <(printf "[polsect]\npolicyIdentifier=anyPolicy\nCPS=https://www.lab.local/CPS\n")
   )
  args:
    executable: /bin/bash
- shell: cat /etc/pki/tls/certs/localhost.crt /etc/pki/tls/certs/localsrvca.crt > /etc/pki/tls/certs/localhost_chain.crt

- shell: creates=/etc/pki/tls/certs/crt1_lab_local.csr openssl req -newkey rsa:2048 -nodes
   -keyout /etc/pki/tls/private/crt1_lab_local.key
   -out /etc/pki/tls/certs/crt1_lab_local.csr
   -subj "{{ cert_org }}CN=crt1.lab.local"
- shell: openssl x509 -req -days 365 -sha256
   -in /etc/pki/tls/certs/crt1_lab_local.csr
   -out /etc/pki/tls/certs/crt1_lab_local.crt
   -CA /etc/pki/tls/certs/localsrvca.crt 
   -CAkey /etc/pki/tls/private/localsrvca.key 
   -CAcreateserial
   -extensions EXTS
   -extfile <(cat
   <(printf "[EXTS]\n")
   <(printf "authorityKeyIdentifier=keyid:always,issuer\n")
   <(printf "subjectKeyIdentifier=hash\n")
   <(printf "subjectAltName=DNS:crt1.lab.local\n")
   <(printf "keyUsage=critical,digitalSignature,keyEncipherment\n")
   <(printf "extendedKeyUsage=serverAuth,clientAuth\n")
   <(printf "crlDistributionPoints=URI:http://ca.lab.local/localsrvca.crl\n")
   <(printf "certificatePolicies=@polsect\n")
   <(printf "authorityInfoAccess=OCSP;URI:http://ocsp.lab.local,caIssuers;URI:http://ca.lab.local/localsrvca.crt\n")
   <(printf "basicConstraints=critical,CA:false\n")
   <(printf "[polsect]\npolicyIdentifier=anyPolicy\nCPS=https://www.lab.local/CPS\n")
   )
  args:
    executable: /bin/bash
- shell: cat /etc/pki/tls/certs/crt1_lab_local.crt /etc/pki/tls/certs/localsrvca.crt > /etc/pki/tls/certs/crt1_lab_local_chain.crt

- shell: creates=/etc/pki/tls/certs/crt2_lab_local.csr openssl req -newkey rsa:2048 -nodes
   -keyout /etc/pki/tls/private/crt2_lab_local.key
   -out /etc/pki/tls/certs/crt2_lab_local.csr
   -subj "{{ cert_org }}CN=crt2.lab.local"
- shell: openssl x509 -req -days 365 -sha256
   -in /etc/pki/tls/certs/crt2_lab_local.csr
   -out /etc/pki/tls/certs/crt2_lab_local.crt
   -CA /etc/pki/tls/certs/localsrvca.crt 
   -CAkey /etc/pki/tls/private/localsrvca.key 
   -CAcreateserial
   -extensions EXTS
   -extfile <(cat
   <(printf "[EXTS]\n")
   <(printf "authorityKeyIdentifier=keyid:always,issuer\n")
   <(printf "subjectKeyIdentifier=hash\n")
   <(printf "subjectAltName=DNS:crt2.lab.local\n")
   <(printf "keyUsage=critical,digitalSignature,keyEncipherment\n")
   <(printf "extendedKeyUsage=serverAuth,clientAuth\n")
   <(printf "crlDistributionPoints=URI:http://ca.lab.local/localsrvca.crl\n")
   <(printf "certificatePolicies=@polsect\n")
   <(printf "authorityInfoAccess=OCSP;URI:http://ocsp.lab.local,caIssuers;URI:http://ca.lab.local/localsrvca.crt\n")
   <(printf "basicConstraints=critical,CA:false\n")
   <(printf "[polsect]\npolicyIdentifier=anyPolicy\nCPS=https://www.lab.local/CPS\n")
   )
  args:
    executable: /bin/bash
- shell: cat /etc/pki/tls/certs/crt2_lab_local.crt /etc/pki/tls/certs/localsrvca.crt > /etc/pki/tls/certs/crt2_lab_local_chain.crt

- copy: src=default.conf dest=/etc/nginx/conf.d/default.conf owner=root group=root mode=0644
- copy: src=001_crt1.conf dest=/etc/nginx/conf.d/001_crt1.conf owner=root group=root mode=0644
- copy: src=002_crt2.conf dest=/etc/nginx/conf.d/002_crt2.conf owner=root group=root mode=0644

- service: name=nginx state=started enabled=true
